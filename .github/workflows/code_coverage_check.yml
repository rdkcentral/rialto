# If not stated otherwise in this file or this component's LICENSE file the
# following copyright and licenses apply:
#
# Copyright 2024 Sky UK
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Code Coverage Check
on:
  pull_request:
    branches:
      - "master"
      - "rdkcentral:master"

  push:
    branches:
      - "RIALTO-421"

  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    # Timeout after
    timeout-minutes: 10

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: checkout repo
        uses: actions/checkout@v3

      # Initialises the host ready to run unittests
      - name: Initialise host
        uses: ./.github/workflows/actions/init_ut

    # Run the build script 
      - name: build_ut.py script 
        run: |
              python build_ut.py -c -xml -f -cov

      # Install lcov
      - name: Install lcov library
        run: |
            sudo apt-get install libjson-perl libperlio-gzip-perl perl libgd-gd2-perl libcapture-tiny-perl libdatetime-perl
            wget https://github.com/linux-test-project/lcov/releases/download/v2.0/lcov-2.0.tar.gz
            tar -xf lcov-2.0.tar.gz
            cd lcov-2.0
            sudo make install
  
    #   - name: Generate html
    #     run: |
    #         cd build
    #         genhtml coverage.info --output-directory gh_pages/coverage_report --filter brace,function,trivial
    
    #   - name: Generate coverage stats
    #     run: |
    #       cd build
    #       lcov --summary coverage.info --filter brace,function,trivial > coverage_statistics.txt  

      # Upload coverage report on success
      - name: Upload Coverage Report
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: coverage_report
          path: build/gh_pages/coverage_report  

      # Upload coverage statistics on success
      - name: Upload Coverage Statistics
        uses: actions/upload-artifact@v3
        if: success()
        with:
          name: coverage_report_stats
          path: build/coverage_statistics.txt  

      # Download current master coverage statistics
      - name: Download Master Coverage Statistics
        uses: dawidd6/action-download-artifact@v2
        if: ${{ success() && github.ref != 'refs/heads/master' }}
        with:
          workflow_conclusion: success
          branch: master
          name: coverage_report_stats
          path: master_artifacts  

      # Run the process_coverage_stats script
      - name: Process Coverage Statistics
        if: ${{ success() && github.ref != 'refs/heads/master' }}
        run: python scripts/coverage/process_coverage_stats.py ./master_artifacts/coverage_statistics.txt build/coverage_statistics.txt  

      # Fail if coverage decreases
      - name: Check Coverage Decrease
        if: success() || failure()
        run: |
            coverage_before=$(awk '/Line.*\%/{print $3}' ./master_artifacts/coverage_statistics.txt)
            coverage_after=$(awk '/Line.*\%/{print $3}' build/coverage_statistics.txt)

            if [ "$coverage_after" -lt "$coverage_before" ]; then
              echo "Code coverage decreased. Please update your tests to maintain or increase coverage."
              exit 1
            fi

      # Get process_coverage_stats script output
      - id: get-comment-body
        if: ${{ success() && github.ref != 'refs/heads/master' }}
        run: |
          body="$(cat comparison_output.txt)"
          body="${body//'%'/'%25'}"
          body="${body//$'\n'/'%0A'}"
          body="${body//$'\r'/'%0D'}"
          echo "::set-output name=body::$body"  

      # Create comment with coverage info
      - name: Create Coverage Comment
        if: ${{ success() && github.ref != 'refs/heads/master' }}
        uses: peter-evans/create-or-update-comment@v2
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: ${{ steps.get-comment-body.outputs.body }}
              

              