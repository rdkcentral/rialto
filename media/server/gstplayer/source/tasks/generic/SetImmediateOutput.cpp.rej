--- media/server/gstplayer/source/tasks/generic/SetImmediateOutput.cpp
+++ media/server/gstplayer/source/tasks/generic/SetImmediateOutput.cpp
@@ -36,39 +33,22 @@ SetImmediateOutput::~SetImmediateOutput()
 }
 
 void SetImmediateOutput::execute() const
 {
     RIALTO_SERVER_LOG_DEBUG("Executing SetImmediateOutput for %s source", common::convertMediaSourceType(m_type));
 
-    GstElement *sink = m_player.getSink(m_type);
-    if (sink)
+    if (m_type == MediaSourceType::VIDEO)
     {
-        // For AutoVideoSink we use properties on the child sink
-        GstElement *actualSink{sink};
-        if (MediaSourceType::VIDEO == m_type)
-            actualSink = m_player.getSinkChildIfAutoVideoSink(sink);
-        else if (MediaSourceType::AUDIO == m_type)
-            actualSink = m_player.getSinkChildIfAutoAudioSink(sink);
-
-        gboolean immediateOutput{m_immediateOutput ? TRUE : FALSE};
-        if (m_immediateOutput)
-            RIALTO_SERVER_LOG_DEBUG("Immediate TRUE");
-        else
-            RIALTO_SERVER_LOG_DEBUG("Immediate FALSE");
-            
-        if (m_glibWrapper->gObjectClassFindProperty(G_OBJECT_GET_CLASS(actualSink), "immediate-output"))
-        {
-            gboolean immediateOutput{m_immediateOutput};
-            m_glibWrapper->gObjectSet(actualSink, "immediate-output", immediateOutput, nullptr);
-        }
-        else
-        {
-            RIALTO_SERVER_LOG_ERROR("Failed to set immediate-output property on sink '%s'", GST_ELEMENT_NAME(actualSink));
-        }
-        m_gstWrapper->gstObjectUnref(GST_OBJECT(sink));
+        m_context.pendingImmediateOutputForVideo = m_immediateOutput ? PendingBool::PENDING_TRUE
+                                                                     : PendingBool::PENDING_FALSE;
     }
     else
     {
-        RIALTO_SERVER_LOG_ERROR("Failed to set immediate-output property, sink is NULL");
+        RIALTO_SERVER_LOG_ERROR("SetImmediateOutput not currently supported for non-video");
+    }
+
+    if (m_context.pipeline)
+    {
+        m_player.setImmediateOutput();
     }
 }
 } // namespace firebolt::rialto::server::tasks::generic
