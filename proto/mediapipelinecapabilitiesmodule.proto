/*
 * If not stated otherwise in this file or this component's LICENSE file the
 * following copyright and licenses apply:
 *
 * Copyright 2022 Sky UK
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

syntax = "proto2";

import "google/protobuf/descriptor.proto";
import "rialtocommon.proto";

package firebolt.rialto;

// You need this to generate the rpc service stubs
option cc_generic_services = true;

/**
 * @fn vector<string> getSupportedMimeTypes(MediaSourceType media_type)
 * @brief Returns the MSE mime types supported by Rialto
 *
 * @returns The supported mime types.
 */
message GetSupportedMimeTypesRequest {
  optional ProtoMediaSourceType media_type = 1;
}
message GetSupportedMimeTypesResponse {
  repeated string mime_types = 1;
}

/**
 * @fn bool isMimeTypeSupported(const std::string &mimeType)
 * @brief Indicates if the specified mime type is supported.
 *
 * @param[in]  mime_type   The mime type to check.
 *
 * @returns true if supported.
 */
message IsMimeTypeSupportedRequest {
  optional string mime_type = 1;
}
message IsMimeTypeSupportedResponse {
  optional bool is_supported = 1;
}


service MediaPipelineCapabilitiesModule {
    /**
     * @brief Returns the MSE mime types supported by Rialto
     * @see GetSupportedMimeTypesRequest
     */
    rpc getSupportedMimeTypes(GetSupportedMimeTypesRequest) returns (GetSupportedMimeTypesResponse) {
    }

    /**
     * @brief Indicates if the specified mime type is supported.
     * @see IsMimeTypeSupportedRequest
     */
    rpc isMimeTypeSupported(IsMimeTypeSupportedRequest) returns (IsMimeTypeSupportedResponse) {
    }
}